 Sping IOC , 此Demo 基于上一个 Spring_v1 删除模拟的 factory, 导入 Maven 使用 5.0.2坐标
 故需要先删除包"factory", 采用 new 方法.(体现 Spring 解耦嘛)

 配置 bean.xml 中的  accountService accountDao

运行,结果输出 : " com.yydcyy.service.impl.AccountServiceImpl@1bce4f0a
          com.yydcyy.dao.impl.AccountDaoImpl@5e3a8624
          保存了账户
          1 "  说明初始化环境正确

 ApplicationContext的三个常用实现类：  [详见 ui/Client.java 类]
     *      ClassPathXmlApplicationContext：它可以加载类路径下的配置文件，要求配置文件必须在类路径下。不在的话，加载不了。(更常用)
     *      FileSystemXmlApplicationContext：它可以加载磁盘任意路径下的配置文件(必须有访问权限 Windows / mac 可能就没有访问权限
     *      AnnotationConfigApplicationContext：下次详解
          *  BeanFactory:            多例对象使用

     核心容器的两个接口引发出的问题： [可 sout 输出,debug 单步调试看哪一步打印]
          *  ApplicationContext:     单例对象适用              采用此接口
          *      它在构建核心容器时，创建对象采取的策略是采用立即加载的方式。也就是说，只要一读取完配置文件马上就创建配置文件中配置的对象。
          *
          *      它在构建核心容器时，创建对象采取的策略是采用延迟加载的方式。也就是说，什么时候根据id获取对象了，什么时候才真正的创建对象。
